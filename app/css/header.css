body {
  font-size: 15px;
  min-width: 320px;
  position: relative;
  line-height: 1.466666666666667em;
  font-family: "RobotoBold", sans-serif;
  overflow-x: hidden;
  color: #333;
}
.hidden {
  display: none;
}
a,
a:hover,
a:focus,
a:active {
  color: #f39f18;
  text-decoration: underline;
}
.headers,
h1,
h2,
h3,
h4,
h5,
h6 {
  font-family: "PFCentroSlabProMedium", sans-serif;
  text-transform: uppercase;
  font-weight: normal;
  color: #2c3949;
}
h1 {
  font-size: 3.2em;
}
h2 {
  font-size: 2em;
}
h3 {
  font-size: 1.6em;
}
b,
strong {
  font-family: "RalewayBold", sans-serif;
}
.before,
.main-head::before {
  content: '';
  width: 100%;
  height: 100%;
  position: absolute;
  left: 0;
  top: 0;
}
.trans {
  -webkit-transition: all 0.5s ease;
  -moz-transition: all 0.5s ease;
  -o-transition: all 0.5s ease;
  -ms-transition: all 0.5s ease;
  transition: all 0.5s ease;
}
.ulmnu,
.main-head .main-mnu ul,
.header-wrap ul {
  list-style: none;
  margin: 0;
  padding: 0;
}
.ulmnu li,
.main-head .main-mnu ul li,
.header-wrap ul li {
  display: inline-block;
}
.main-head {
  min-height: 620px;
  -webkit-background-size: cover;
  -webkit-background-size: cover;
  -moz-background-size: cover;
  background-size: cover;
  background-position: center;
  position: relative;
  padding-bottom: 110px;
}
.main-head h1 {
  text-transform: none;
  line-height: 1.133333333333333em;
}
.main-head::before {
  background-color: #394b5f;
  opacity: 0.85;
  -ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity=85)";
  filter: alpha(opacity=85);
}
.main-head .top-line {
  min-height: 160px;
  background-image: url("../img/top_gradient.png");
  background-repeat: repeat-x;
  padding-top: 45px;
}
.main-head .logo {
  opacity: 0.95;
  -ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity=95)";
  filter: alpha(opacity=95);
}
.main-head .logo img {
  width: 100px;
}
.main-head .main-mnu {
  font-family: RalewayRegular, sans-serif;
  font-size: 0.933333333333333em;
}
.main-head .main-mnu li {
  line-height: 48px;
  padding: 0 10px;
}
.main-head .main-mnu li.active a {
  color: #f39f18;
  text-decoration: underline;
}
.main-head .main-mnu li a:hover {
  color: #f39f18;
  text-decoration: underline;
}
.main-head .main-mnu a {
  text-decoration: none;
  color: #fff;
}
.phone-wrap {
  position: relative;
}
.phone-wrap .phone {
  opacity: 0.9;
  -ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity=90)";
  filter: alpha(opacity=90);
  color: #fff;
  font-family: RobotoBold, sans-serif;
  font-size: 1.266666666666667em;
  line-height: 48px;
  text-align: right;
  white-space: nowrap;
}
.phone-wrap .toggle-mnu {
  position: absolute;
  top: 0;
  right: 0;
  display: block;
  width: 28px;
  height: 28px;
  padding-top: 20px;
}
.phone-wrap .toggle-mnu span:after,
.phone-wrap .toggle-mnu span:before {
  content: "";
  position: absolute;
  left: 0;
  top: -9px;
}
.phone-wrap .toggle-mnu span:after {
  top: 9px;
}
.phone-wrap .toggle-mnu span {
  position: relative;
  display: block;
}
.phone-wrap .toggle-mnu span,
.phone-wrap .toggle-mnu span:after,
.phone-wrap .toggle-mnu span:before {
  width: 100%;
  height: 2px;
  background-color: #fff;
  -webkit-border-radius: 2px;
  border-radius: 2px;
  -webkit-transition: all 0.3s;
  -moz-transition: all 0.3s;
  -o-transition: all 0.3s;
  -ms-transition: all 0.3s;
  transition: all 0.3s;
}
.phone-wrap .toggle-mnu.on span {
  background-color: transparent;
}
.phone-wrap .toggle-mnu.on span:before {
  -webkit-transform: rotate(45deg) translate(5px, 5px);
  -moz-transform: rotate(45deg) translate(5px, 5px);
  -o-transform: rotate(45deg) translate(5px, 5px);
  -ms-transform: rotate(45deg) translate(5px, 5px);
  transform: rotate(45deg) translate(5px, 5px);
}
.phone-wrap .toggle-mnu.on span:after {
  -webkit-transform: rotate(-45deg) translate(7px, -8px);
  -moz-transform: rotate(-45deg) translate(7px, -8px);
  -o-transform: rotate(-45deg) translate(7px, -8px);
  -ms-transform: rotate(-45deg) translate(7px, -8px);
  transform: rotate(-45deg) translate(7px, -8px);
}
.header-wrap {
  margin-top: 40px;
}
.header-wrap h1 {
  margin-top: 120px;
  color: #fff;
  border-bottom: #f39f18 8px solid;
  display: inline-block;
}
.header-wrap ul {
  margin-top: 10px;
}
.header-wrap ul li {
  display: block;
  font-family: RalewaySemiBold, sans-serif;
  font-style: 1.2em;
  line-height: 2.133333333333333em;
}
.header-wrap ul li:before {
  display: inline-block;
  content: '';
  -webkit-transform: rotate(45deg);
  -moz-transform: rotate(45deg);
  -o-transform: rotate(45deg);
  -ms-transform: rotate(45deg);
  transform: rotate(45deg);
  border-bottom: 4px transparent solid;
  border-left: 4px transparent solid;
  border-top: 4px #f39f18 solid;
  border-right: 4px #f39f18 solid;
  margin-right: 15px;
}
.header-wrap ul li a {
  text-decoration: none;
  color: #fff;
}
.header-wrap ul li a:hover {
  text-decoration: underline;
}
.header-left {
  margin-bottom: 50px;
}
.forms {
  background-color: rgba(36,51,67,0.8);
  padding: 30px 35px;
  color: #97a4b2;
  font-size: 0.933333333333333em;
  border-bottom: 3px solid #1f2a36;
}
.forms .buttons {
  margin-top: 15px;
}
.forms h4 {
  color: #fff;
  font-family: PFCentroSlabProMedium, sans-serif;
  font-size: 34px;
  margin: 0;
  text-transform: none;
}
.forms p {
  font-family: RalewayRegular, sans-serif;
  line-height: 1.2em;
}
.forms label {
  display: block;
  margin-top: 22px;
  margin-bottom: 10px;
  font-family: RalewayRegular, sans-serif;
}
.forms label span {
  letter-spacing: 1.5px;
  margin-bottom: 3px;
  display: block;
  color: #778390;
  margin-bottom: 10px;
}
.forms label input {
  display: block;
  width: 100%;
  border: none;
  -webkit-box-shadow: 0 -3px #1f2a36;
  box-shadow: 0 -3px #1f2a36;
  background-color: #34465a;
  text-indent: 10px;
  padding: 9px 0;
  -webkit-transition: 0.3s all ease;
  -moz-transition: 0.3s all ease;
  -o-transition: 0.3s all ease;
  -ms-transition: 0.3s all ease;
  transition: 0.3s all ease;
  font-family: PFCentroSlabProMedium, sans-serif;
  font-size: 1.2em;
}
.forms label input:focus {
  -webkit-box-shadow: 0 -6px #1f2a36;
  box-shadow: 0 -6px #1f2a36;
  outline: none;
  background-color: #394e65;
}
.button-wrap {
  text-align: center;
}
.buttons {
  display: inline-block;
  border: none;
  background-color: #f39f18;
  color: #111;
  font-family: PFCentroSlabProBold, sans-serif;
  font-size: 1.333333333333333em;
  padding: 12px 25px;
  border-bottom: 3px solid #b97200;
  -webkit-transition: 0.5s all ease;
  -moz-transition: 0.5s all ease;
  -o-transition: 0.5s all ease;
  -ms-transition: 0.5s all ease;
  transition: 0.5s all ease;
}
.buttons:hover {
  background-color: #ffb338;
}
.buttons:active {
  background-color: #db8c0e;
}
.arrow-bottom {
  display: inline-block;
  width: 40px;
  height: 40px;
  background-image: url("../img/arrow_down.png");
  position: relative;
  z-index: 2;
  top: 40px;
  cursor: pointer;
  opacity: 0.7;
  -ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity=70)";
  filter: alpha(opacity=70);
  -webkit-transition: 0.3s all ease;
  -moz-transition: 0.3s all ease;
  -o-transition: 0.3s all ease;
  -ms-transition: 0.3s all ease;
  transition: 0.3s all ease;
}
.arrow-bottom:hover {
  opacity: 1;
  -ms-filter: none;
  filter: none;
}

/*# sourceMappingURL=data:application/json;base64, */

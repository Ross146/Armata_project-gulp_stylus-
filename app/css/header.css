body {
  font-size: 15px;
  min-width: 320px;
  position: relative;
  line-height: 1.466666666666667em;
  font-family: "RobotoBold", sans-serif;
  overflow-x: hidden;
  color: #333;
}
.hidden {
  display: none;
}
a,
a:hover,
a:focus,
a:active {
  color: #f39f18;
  text-decoration: underline;
}
.headers,
h1,
h2,
h3,
h4,
h5,
h6 {
  font-family: "PFCentroSlabProMedium", sans-serif;
  text-transform: uppercase;
  font-weight: normal;
  color: #2c3949;
}
h1 {
  font-size: 3.2em;
}
h2 {
  font-size: 2em;
}
h3 {
  font-size: 1.6em;
}
b,
strong {
  font-family: "RalewayBold", sans-serif;
}
.before,
.main-head::before {
  content: '';
  width: 100%;
  height: 100%;
  position: absolute;
  left: 0;
  top: 0;
}
.ulmnu,
.main-head .main-mnu ul {
  list-style: none;
  margin: 0;
  padding: 0;
}
.ulmnu li,
.main-head .main-mnu ul li {
  display: inline-block;
}
.main-head {
  min-height: 620px;
  -webkit-background-size: cover;
  background-size: cover;
  background-position: center;
  position: relative;
}
.main-head h1 {
  text-transform: none;
}
.main-head::before {
  background-color: #394b5f;
  opacity: 0.85;
}
.main-head .top-line {
  min-height: 160px;
  background-image: url("../img/top_gradient.png");
  background-repeat: repeat-x;
  padding-top: 45px;
}
.main-head .logo {
  opacity: 0.95;
}
.main-head .logo img {
  width: 100px;
}
.main-head .main-mnu {
  font-size: 0.933333333333333em;
}
.main-head .main-mnu li {
  line-height: 48px;
  padding: 0 10px;
}
.main-head .main-mnu li.active a {
  color: #f39f18;
  text-decoration: underline;
}
.main-head .main-mnu li a:hover {
  color: #f39f18;
  text-decoration: underline;
}
.main-head .main-mnu a {
  text-decoration: none;
  color: #fff;
}
.phone {
  opacity: 0.9;
  color: #fff;
  font-family: RobotoBold, sans-serif;
  font-size: 1.266666666666667em;
  line-height: 48px;
}

/*# sourceMappingURL=data:application/json;base64, */
